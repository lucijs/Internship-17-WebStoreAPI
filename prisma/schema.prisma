// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category{
  id        Int      @id @default(autoincrement())
  name     String @unique
  products Product[]
}

model Product{
  id        Int      @id @default(autoincrement())
  title     String @unique
  price Decimal
  category Category @relation(fields:[categoryId], references: [id])
  categoryId Int
  description String
  image String?
  inCart Cart[]
  wishlisted Wishlist[]
  buyers History[]
}

model User{
  id        Int      @id @default(autoincrement())
  username     String @unique
  email String @unique
  password String 
  firstName String
  lastName String
  cityAdress String
  streetAdress String
  numberAdress String
  phone String
  isAdmin Boolean @default(false)
  productsInCart Cart[]
  wishlist Wishlist[]
  history History[]
}

model Cart{
  id        Int      @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int
  amount Int @default(1)
  dateCreated DateTime@default(now())
}

model Wishlist{
  id        Int      @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int
  dateCreated DateTime@default(now())
}

model History{
  id        Int      @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int
  amount Int 
  dateCreated DateTime@default(now())
}